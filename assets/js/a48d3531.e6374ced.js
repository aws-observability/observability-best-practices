"use strict";(self.webpackChunkobservability_best_practices=self.webpackChunkobservability_best_practices||[]).push([[6256],{7360:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"guides":[{"type":"category","label":"Guides","items":[{"type":"link","label":"Best practices overview","href":"/observability-best-practices/docs/guides/","docId":"guides/index","unlisted":false},{"type":"link","label":"Choosing a tracing agent","href":"/observability-best-practices/docs/guides/choosing-a-tracing-agent","docId":"guides/choosing-a-tracing-agent","unlisted":false},{"type":"category","label":"Cost","items":[{"type":"link","label":"Using Kubecost","href":"/observability-best-practices/docs/guides/cost/kubecost","docId":"guides/cost/kubecost","unlisted":false},{"type":"category","label":"Visualizing costs","items":[{"type":"link","label":"AWS Observability services and Cost","href":"/observability-best-practices/docs/guides/cost/cost-visualization/cost","docId":"guides/cost/cost-visualization/cost","unlisted":false},{"type":"link","label":"Amazon CloudWatch","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-cloudwatch","docId":"guides/cost/cost-visualization/amazon-cloudwatch","unlisted":false},{"type":"link","label":"Amazon Managed Grafana","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-grafana","docId":"guides/cost/cost-visualization/amazon-grafana","unlisted":false},{"type":"link","label":"Amazon Managed Service for Prometheus","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-prometheus","docId":"guides/cost/cost-visualization/amazon-prometheus","unlisted":false},{"type":"link","label":"Real-time cost monitoring","href":"/observability-best-practices/docs/guides/cost/cost-visualization/AmazonManagedServiceforPrometheus","docId":"guides/cost/cost-visualization/AmazonManagedServiceforPrometheus","unlisted":false},{"type":"link","label":"AWS X-Ray","href":"/observability-best-practices/docs/guides/cost/cost-visualization/aws-xray","docId":"guides/cost/cost-visualization/aws-xray","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Databases","items":[{"type":"link","label":"Monitor Amazon RDS and Aurora databases","href":"/observability-best-practices/docs/guides/databases/rds-and-aurora","docId":"guides/databases/rds-and-aurora","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"EC2 Monitoring and Observability","href":"/observability-best-practices/docs/guides/ec2-monitoring","docId":"guides/ec2-monitoring","unlisted":false},{"type":"category","label":"ECS best practices","items":[{"type":"category","label":"AWS Native","items":[{"type":"link","label":"Collecting system metrics with Container Insights","href":"/observability-best-practices/docs/guides/containers/aws-native/ecs/best-practices-metrics-collection-1","docId":"guides/containers/aws-native/ecs/best-practices-metrics-collection-1","unlisted":false},{"type":"link","label":"Collecting service metrics with Container Insights","href":"/observability-best-practices/docs/guides/containers/aws-native/ecs/best-practices-metrics-collection-2","docId":"guides/containers/aws-native/ecs/best-practices-metrics-collection-2","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Open Source","items":[{"type":"link","label":"Collecting system metrics in an ECS cluster using AWS Distro for OpenTelemetry","href":"/observability-best-practices/docs/guides/containers/oss/ecs/best-practices-metrics-collection-1","docId":"guides/containers/oss/ecs/best-practices-metrics-collection-1","unlisted":false},{"type":"link","label":"Collecting service metrics in an ECS cluster using AWS Distro for OpenTelemetry","href":"/observability-best-practices/docs/guides/containers/oss/ecs/best-practices-metrics-collection-2","docId":"guides/containers/oss/ecs/best-practices-metrics-collection-2","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"EKS best practices","items":[{"type":"category","label":"AWS Native","items":[{"type":"link","label":"Amazon CloudWatch Container Insights","href":"/observability-best-practices/docs/guides/containers/aws-native/eks/amazon-cloudwatch-container-insights","docId":"guides/containers/aws-native/eks/amazon-cloudwatch-container-insights","unlisted":false},{"type":"link","label":"Log Aggregation","href":"/observability-best-practices/docs/guides/containers/aws-native/eks/log-aggregation","docId":"guides/containers/aws-native/eks/log-aggregation","unlisted":false},{"type":"link","label":"Amazon EKS API Server Monitoring","href":"/observability-best-practices/docs/guides/containers/aws-native/eks/eks-api-server-monitoring","docId":"guides/containers/aws-native/eks/eks-api-server-monitoring","unlisted":false},{"type":"link","label":"Container Tracing with AWS X-Ray","href":"/observability-best-practices/docs/guides/containers/aws-native/eks/container-tracing-with-aws-xray","docId":"guides/containers/aws-native/eks/container-tracing-with-aws-xray","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Open Source","items":[{"type":"link","label":"EKS Observability : Essential Metrics","href":"/observability-best-practices/docs/guides/containers/oss/eks/best-practices-metrics-collection","docId":"guides/containers/oss/eks/best-practices-metrics-collection","unlisted":false},{"type":"link","label":"Autoscaling applications using KEDA on AMP and EKS","href":"/observability-best-practices/docs/guides/containers/oss/eks/keda-amp-eks","docId":"guides/containers/oss/eks/keda-amp-eks","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Serverless best practices","items":[{"type":"link","label":"AWS Lambda based Serverless Observability","href":"/observability-best-practices/docs/guides/serverless/aws-native/lambda-based-observability","docId":"guides/serverless/aws-native/lambda-based-observability","unlisted":false},{"type":"link","label":"AWS Lambda based Serverless Observability with OpenTelemetry","href":"/observability-best-practices/docs/guides/serverless/oss/lambda-based-observability-adot","docId":"guides/serverless/oss/lambda-based-observability-adot","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Best practices for hybrid and multicloud","href":"/observability-best-practices/docs/guides/hybrid-and-multicloud","docId":"guides/hybrid-and-multicloud","unlisted":false},{"type":"category","label":"Operational","items":[{"type":"category","label":"ADOT Collector","items":[{"type":"link","label":"Operating the AWS Distro for OpenTelemetry (ADOT) Collector","href":"/observability-best-practices/docs/guides/operational/adot-at-scale/operating-adot-collector","docId":"guides/operational/adot-at-scale/operating-adot-collector","unlisted":false},{"type":"link","label":"Instrumenting Java Spring Integration Applications","href":"/observability-best-practices/docs/guides/operational/adot-at-scale/adot-java-spring/","docId":"guides/operational/adot-at-scale/adot-java-spring/adot-java-spring","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Why should you do observability?","href":"/observability-best-practices/docs/guides/operational/business/monitoring-for-business-outcomes","docId":"guides/operational/business/monitoring-for-business-outcomes","unlisted":false},{"type":"link","label":"Percentiles are important","href":"/observability-best-practices/docs/guides/operational/business/sla-percentile","docId":"guides/operational/business/sla-percentile","unlisted":false},{"type":"link","label":"key-performance-indicators","href":"/observability-best-practices/docs/guides/operational/business/key-performance-indicators","docId":"guides/operational/business/key-performance-indicators","unlisted":false},{"type":"link","label":"Creating Custom Metrics with the AWS Rust SDK","href":"/observability-best-practices/docs/guides/rust-custom-metrics/","docId":"guides/rust-custom-metrics/README","unlisted":false},{"type":"category","label":"Alerting","items":[{"type":"link","label":"Amazon Managed Service for Prometheus Alert Manager","href":"/observability-best-practices/docs/guides/operational/alerting/amp-alertmgr","docId":"guides/operational/alerting/amp-alertmgr","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"GitOps","items":[{"type":"link","label":"Using GitOps and Grafana Operator with Amazon Managed Grafana","href":"/observability-best-practices/docs/guides/operational/gitops-with-amg/","docId":"guides/operational/gitops-with-amg/gitops-with-amg","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Dashboards","items":[{"type":"link","label":"CloudWatch Dashboard","href":"/observability-best-practices/docs/tools/cloudwatch-dashboard","docId":"tools/cloudwatch-dashboard","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Signal collection","items":[{"type":"link","label":"CloudWatch Embedded Metric Format","href":"/observability-best-practices/docs/guides/signal-collection/emf","docId":"guides/signal-collection/emf","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Partners","items":[{"type":"link","label":"Databricks Monitoring and Observability Best Practices in AWS","href":"/observability-best-practices/docs/guides/partners/databricks","docId":"guides/partners/databricks","unlisted":false},{"type":"category","label":"Databases","items":[{"type":"link","label":"Monitor Amazon RDS and Aurora databases","href":"/observability-best-practices/docs/guides/databases/rds-and-aurora","docId":"guides/databases/rds-and-aurora","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cost","items":[{"type":"link","label":"Using Kubecost","href":"/observability-best-practices/docs/guides/cost/kubecost","docId":"guides/cost/kubecost","unlisted":false},{"type":"category","label":"Visualizing costs","items":[{"type":"link","label":"AWS Observability services and Cost","href":"/observability-best-practices/docs/guides/cost/cost-visualization/cost","docId":"guides/cost/cost-visualization/cost","unlisted":false},{"type":"link","label":"Amazon CloudWatch","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-cloudwatch","docId":"guides/cost/cost-visualization/amazon-cloudwatch","unlisted":false},{"type":"link","label":"Amazon Managed Grafana","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-grafana","docId":"guides/cost/cost-visualization/amazon-grafana","unlisted":false},{"type":"link","label":"Amazon Managed Service for Prometheus","href":"/observability-best-practices/docs/guides/cost/cost-visualization/amazon-prometheus","docId":"guides/cost/cost-visualization/amazon-prometheus","unlisted":false},{"type":"link","label":"AWS X-Ray","href":"/observability-best-practices/docs/guides/cost/cost-visualization/aws-xray","docId":"guides/cost/cost-visualization/aws-xray","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"link","label":"AWS Observability Maturity Model","href":"/observability-best-practices/docs/guides/observability-maturity-model","docId":"guides/observability-maturity-model","unlisted":false}],"collapsed":true,"collapsible":true}],"sigals":[{"type":"category","label":"Data types","items":[{"type":"link","label":"Logs","href":"/observability-best-practices/docs/signals/logs","docId":"signals/logs","unlisted":false},{"type":"link","label":"Metrics","href":"/observability-best-practices/docs/signals/metrics","docId":"signals/metrics","unlisted":false},{"type":"link","label":"Traces","href":"/observability-best-practices/docs/signals/traces","docId":"signals/traces","unlisted":false},{"type":"link","label":"Alarms","href":"/observability-best-practices/docs/signals/alarms","docId":"signals/alarms","unlisted":false},{"type":"link","label":"Events","href":"/observability-best-practices/docs/signals/events","docId":"signals/events","unlisted":false}],"collapsed":true,"collapsible":true}],"tools":[{"type":"category","label":"Tools","items":[{"type":"link","label":"AWS Observability Accelerator","href":"/observability-best-practices/docs/tools/observability_accelerator","docId":"tools/observability_accelerator","unlisted":false},{"type":"link","label":"CloudWatch Agent","href":"/observability-best-practices/docs/tools/cloudwatch_agent","docId":"tools/cloudwatch_agent","unlisted":false},{"type":"link","label":"Alarms","href":"/observability-best-practices/docs/tools/alarms","docId":"tools/alarms","unlisted":false},{"type":"link","label":"Dashboards","href":"/observability-best-practices/docs/tools/dashboards","docId":"tools/dashboards","unlisted":false},{"type":"link","label":"Internet Monitor","href":"/observability-best-practices/docs/tools/internet_monitor","docId":"tools/internet_monitor","unlisted":false},{"type":"category","label":"Logs","items":[{"type":"link","label":"Logging","href":"/observability-best-practices/docs/tools/logs/","docId":"tools/logs/index","unlisted":false},{"type":"link","label":"CloudWatch Logs Insights Example Queries","href":"/observability-best-practices/docs/tools/logs/logs-insights-examples","docId":"tools/logs/logs-insights-examples","unlisted":false},{"type":"category","label":"Data Protection","items":[{"type":"link","label":"CloudWatch Logs Data Protection Policies for SLG/EDU","href":"/observability-best-practices/docs/tools/logs/dataprotection/data-protection-policies","docId":"tools/logs/dataprotection/data-protection-policies","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Application Signals","items":[{"type":"link","label":"Application Signals for Kotlin Services","href":"/observability-best-practices/docs/tools/application-signals/kotlin-signals","docId":"tools/application-signals/kotlin-signals","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Metrics","href":"/observability-best-practices/docs/tools/metrics","docId":"tools/metrics","unlisted":false},{"type":"link","label":"Real User Monitoring","href":"/observability-best-practices/docs/tools/rum","docId":"tools/rum","unlisted":false},{"type":"link","label":"Synthetic testing","href":"/observability-best-practices/docs/tools/synthetics","docId":"tools/synthetics","unlisted":false},{"type":"link","label":"Service Level Objectives (SLOs)","href":"/observability-best-practices/docs/tools/slos","docId":"tools/slos","unlisted":false},{"type":"link","label":"AWS X-Ray","href":"/observability-best-practices/docs/tools/xray","docId":"tools/xray","unlisted":false}],"collapsed":true,"collapsible":true}],"recipes":[{"type":"category","label":"Curated recipes","items":[{"type":"link","label":"Recipes","href":"/observability-best-practices/docs/recipes/","docId":"recipes/index","unlisted":false},{"type":"link","label":"Dimensions","href":"/observability-best-practices/docs/recipes/dimensions","docId":"recipes/dimensions","unlisted":false},{"type":"link","label":"Telemetry","href":"/observability-best-practices/docs/recipes/telemetry","docId":"recipes/telemetry","unlisted":false},{"type":"category","label":"By Compute","items":[{"type":"link","label":"AWS App Runner","href":"/observability-best-practices/docs/recipes/apprunner","docId":"recipes/apprunner","unlisted":false},{"type":"link","label":"Amazon Elastic Kubernetes Service","href":"/observability-best-practices/docs/recipes/eks","docId":"recipes/eks","unlisted":false},{"type":"link","label":"Amazon Elastic Container Service","href":"/observability-best-practices/docs/recipes/ecs","docId":"recipes/ecs","unlisted":false},{"type":"link","label":"AWS Lambda","href":"/observability-best-practices/docs/recipes/lambda","docId":"recipes/lambda","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"By Infra & Databases","items":[{"type":"link","label":"Infrastructure & Databases","href":"/observability-best-practices/docs/recipes/infra","docId":"recipes/infra","unlisted":false},{"type":"category","label":"Databases","items":[{"type":"link","label":"Amazon Relational Database Service","href":"/observability-best-practices/docs/recipes/rds","docId":"recipes/rds","unlisted":false},{"type":"link","label":"Amazon DynamoDB","href":"/observability-best-practices/docs/recipes/dynamodb","docId":"recipes/dynamodb","unlisted":false},{"type":"link","label":"Amazon Managed Streaming for Apache Kafka","href":"/observability-best-practices/docs/recipes/msk","docId":"recipes/msk","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"By Language","items":[{"type":"link","label":"Java","href":"/observability-best-practices/docs/recipes/java","docId":"recipes/java","unlisted":false},{"type":"link","label":"Node.js","href":"/observability-best-practices/docs/recipes/nodejs","docId":"recipes/nodejs","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"By Destination","items":[{"type":"link","label":"Amazon CloudWatch","href":"/observability-best-practices/docs/recipes/cw","docId":"recipes/cw","unlisted":false},{"type":"link","label":"Amazon Managed Service for Prometheus","href":"/observability-best-practices/docs/recipes/amp","docId":"recipes/amp","unlisted":false},{"type":"link","label":"Amazon Managed Grafana","href":"/observability-best-practices/docs/recipes/amg","docId":"recipes/amg","unlisted":false},{"type":"link","label":"Amazon OpenSearch Service","href":"/observability-best-practices/docs/recipes/aes","docId":"recipes/aes","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tasks","items":[{"type":"link","label":"Anomaly Detection","href":"/observability-best-practices/docs/recipes/anomaly-detection","docId":"recipes/anomaly-detection","unlisted":false},{"type":"link","label":"Alerting","href":"/observability-best-practices/docs/recipes/alerting","docId":"recipes/alerting","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/observability-best-practices/docs/recipes/troubleshooting","docId":"recipes/troubleshooting","unlisted":false},{"type":"link","label":"Workshops","href":"/observability-best-practices/docs/recipes/workshops","docId":"recipes/workshops","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"faq":[{"type":"category","label":"FAQ","items":[{"type":"link","label":"General - FAQ","href":"/observability-best-practices/docs/faq/","docId":"faq/faq","unlisted":false},{"type":"link","label":"Amazon CloudWatch - FAQ","href":"/observability-best-practices/docs/faq/cloudwatch","docId":"faq/cloudwatch","unlisted":false},{"type":"link","label":"AWS X-Ray - FAQ","href":"/observability-best-practices/docs/faq/x-ray","docId":"faq/x-ray","unlisted":false},{"type":"link","label":"Amazon Managed Service for Prometheus - FAQ","href":"/observability-best-practices/docs/faq/amp","docId":"faq/amp","unlisted":false},{"type":"link","label":"Amazon Managed Grafana - FAQ","href":"/observability-best-practices/docs/faq/amg","docId":"faq/amg","unlisted":false},{"type":"link","label":"AWS Distro for Open Telemetry (ADOT) -  FAQ","href":"/observability-best-practices/docs/faq/adot","docId":"faq/adot","unlisted":false}],"collapsed":true,"collapsible":true}],"patterns":[{"type":"category","label":"Tracing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EC2 Tracing with AWS X-Ray","href":"/observability-best-practices/docs/patterns/Tracing/xrayec2","docId":"patterns/Tracing/xrayec2","unlisted":false},{"type":"link","label":"ECS Tracing with AWS X-Ray","href":"/observability-best-practices/docs/patterns/Tracing/xrayecs","docId":"patterns/Tracing/xrayecs","unlisted":false},{"type":"link","label":"EKS Tracing with AWS X-Ray","href":"/observability-best-practices/docs/patterns/Tracing/xrayeks","docId":"patterns/Tracing/xrayeks","unlisted":false},{"type":"link","label":"Lambda Tracing with AWS X-Ray","href":"/observability-best-practices/docs/patterns/Tracing/xraylambda","docId":"patterns/Tracing/xraylambda","unlisted":false}]},{"type":"link","label":"CloudWatch Container Insights","href":"/observability-best-practices/docs/patterns/adoteksfargate","docId":"patterns/adoteksfargate","unlisted":false},{"type":"link","label":"Pushing Metrics from EKS to Prometheus","href":"/observability-best-practices/docs/patterns/ampagentless","docId":"patterns/ampagentless","unlisted":false},{"type":"link","label":"APM with Application Signals","href":"/observability-best-practices/docs/patterns/apmappsignals","docId":"patterns/apmappsignals","unlisted":false},{"type":"link","label":"Monitoring ECS Workloads","href":"/observability-best-practices/docs/patterns/ecsampamg","docId":"patterns/ecsampamg","unlisted":false},{"type":"link","label":"EKS Monitoring with AWS Open source service","href":"/observability-best-practices/docs/patterns/eksampamg","docId":"patterns/eksampamg","unlisted":false},{"type":"link","label":"Lambda Logging","href":"/observability-best-practices/docs/patterns/lambdalogging","docId":"patterns/lambdalogging","unlisted":false},{"type":"link","label":"Cross account Monitoring with AWS Native services","href":"/observability-best-practices/docs/patterns/multiaccount","docId":"patterns/multiaccount","unlisted":false},{"type":"link","label":"Cross account monitoring with AWS Open source service","href":"/observability-best-practices/docs/patterns/multiaccountoss","docId":"patterns/multiaccountoss","unlisted":false},{"type":"link","label":"ADOT Observability Pipeline","href":"/observability-best-practices/docs/patterns/o11ypipeline","docId":"patterns/o11ypipeline","unlisted":false},{"type":"link","label":"Opensearch Logging on AWS","href":"/observability-best-practices/docs/patterns/opensearch","docId":"patterns/opensearch","unlisted":false},{"type":"link","label":"Observability with OpenTelemetry","href":"/observability-best-practices/docs/patterns/otel","docId":"patterns/otel","unlisted":false},{"type":"link","label":"Big Data Observability on AWS","href":"/observability-best-practices/docs/patterns/sparkbigdata","docId":"patterns/sparkbigdata","unlisted":false},{"type":"link","label":"VPC Flow Logs for Network Observability","href":"/observability-best-practices/docs/patterns/vpcflowlogs","docId":"patterns/vpcflowlogs","unlisted":false}]},"docs":{"contributors":{"id":"contributors","title":"Contributors","description":"The content on this site is maintained by Solution Architects, AWS Observability service team members and other volunteers from across the organization. Our goal is to improve the discovery of relevant best practices on how to set up and use AWS services and open source projects in the observability space."},"faq/adot":{"id":"faq/adot","title":"AWS Distro for Open Telemetry (ADOT) -  FAQ","description":"1. Can I use the ADOT collector to ingest metrics into AMP?","sidebar":"faq"},"faq/amg":{"id":"faq/amg","title":"Amazon Managed Grafana - FAQ","description":"Why should I choose Amazon Managed Grafana?","sidebar":"faq"},"faq/amp":{"id":"faq/amp","title":"Amazon Managed Service for Prometheus - FAQ","description":"1. Which AWS Regions are supported currently and is it possible to collect metrics from other regions? See our documentation for updated list of Regions that we support. We plan to support all commercial regions in 2023. Please let us know which regions you would like so that we can better prioritize our existing Product Feature Requests (PFRs). You can always collect data from any regions and send it to a specific region that we support. Here\u2019s a blog for more details: Cross-region metrics collection for Amazon Managed Service for Prometheus.","sidebar":"faq"},"faq/cloudwatch":{"id":"faq/cloudwatch","title":"Amazon CloudWatch - FAQ","description":"Why should I choose Amazon CloudWatch?","sidebar":"faq"},"faq/faq":{"id":"faq/faq","title":"General - FAQ","description":"How are logs different from traces?","sidebar":"faq"},"faq/x-ray":{"id":"faq/x-ray","title":"AWS X-Ray - FAQ","description":"1. Does AWS Distro for Open Telemetry (ADOT) support trace propagation across AWS services such as Event Bridge or SQS?","sidebar":"faq"},"guides/apm":{"id":"guides/apm","title":"Application Performance Monitoring","description":""},"guides/choosing-a-tracing-agent":{"id":"guides/choosing-a-tracing-agent","title":"Choosing a tracing agent","description":"Choose the right agent","sidebar":"guides"},"guides/containers/aws-native/ecs/best-practices-metrics-collection-1":{"id":"guides/containers/aws-native/ecs/best-practices-metrics-collection-1","title":"Collecting system metrics with Container Insights","description":"System metrics pertain to low-level resources that include physical components on a server such as CPU, memory, disks and network interfaces.","sidebar":"guides"},"guides/containers/aws-native/ecs/best-practices-metrics-collection-2":{"id":"guides/containers/aws-native/ecs/best-practices-metrics-collection-2","title":"Collecting service metrics with Container Insights","description":"Service metrics are applicaton-level metrics that are captured by adding instrumentation to your code. These metrics can be captured from an application using two different approaches.","sidebar":"guides"},"guides/containers/aws-native/ecs/cost-optimization":{"id":"guides/containers/aws-native/ecs/cost-optimization","title":"cost-optimization","description":""},"guides/containers/aws-native/ecs/resource-optimization":{"id":"guides/containers/aws-native/ecs/resource-optimization","title":"resource-optimization","description":""},"guides/containers/aws-native/eks/amazon-cloudwatch-container-insights":{"id":"guides/containers/aws-native/eks/amazon-cloudwatch-container-insights","title":"Amazon CloudWatch Container Insights","description":"In this section of Observability best practices guide, we will deep dive on to following topics related to Amazon CloudWatch Container Insights :","sidebar":"guides"},"guides/containers/aws-native/eks/container-tracing-with-aws-xray":{"id":"guides/containers/aws-native/eks/container-tracing-with-aws-xray","title":"Container Tracing with AWS X-Ray","description":"In this section of Observability best practices guide, we will deep dive on to following topics related to Container Tracing with AWS X-Ray :","sidebar":"guides"},"guides/containers/aws-native/eks/eks-api-server-monitoring":{"id":"guides/containers/aws-native/eks/eks-api-server-monitoring","title":"Amazon EKS API Server Monitoring","description":"In this section of Observability best practices guide, we will deep dive on to following topics related to API Server Monitoring:","sidebar":"guides"},"guides/containers/aws-native/eks/log-aggregation":{"id":"guides/containers/aws-native/eks/log-aggregation","title":"Log Aggregation","description":"In this section of Observability best practices guide, we will deep dive on to following topics related to Amazon EKS Logging with AWS Native services:","sidebar":"guides"},"guides/containers/oss/ecs/best-practices-metrics-collection":{"id":"guides/containers/oss/ecs/best-practices-metrics-collection","title":"best-practices-metrics-collection","description":""},"guides/containers/oss/ecs/best-practices-metrics-collection-1":{"id":"guides/containers/oss/ecs/best-practices-metrics-collection-1","title":"Collecting system metrics in an ECS cluster using AWS Distro for OpenTelemetry","description":"AWS Distro for OpenTelemetry (ADOT) is a secure, AWS-supported distribution of the OpenTelemetry project. Using ADOT, you can collect telemetry data from multiple sources and send correlated metrics, traces and logs to multiple monitoring solutions. ADOT may be deployed on Amazon ECS cluster in two difference patterns.","sidebar":"guides"},"guides/containers/oss/ecs/best-practices-metrics-collection-2":{"id":"guides/containers/oss/ecs/best-practices-metrics-collection-2","title":"Collecting service metrics in an ECS cluster using AWS Distro for OpenTelemetry","description":"Deploying ADOT Collector with default configuration","sidebar":"guides"},"guides/containers/oss/eks/best-practices-metrics-collection":{"id":"guides/containers/oss/eks/best-practices-metrics-collection","title":"EKS Observability : Essential Metrics","description":"Monitoring is defined as a solution that allows infrastructure and application owners a way to see and understand both historical and current state of their systems, focused on gathering defined metrics or logs.","sidebar":"guides"},"guides/containers/oss/eks/cost-optimization":{"id":"guides/containers/oss/eks/cost-optimization","title":"cost-optimization","description":""},"guides/containers/oss/eks/keda-amp-eks":{"id":"guides/containers/oss/eks/keda-amp-eks","title":"Autoscaling applications using KEDA on AMP and EKS","description":"Handling increased traffic on Amazon EKS applications is challenging, with manual scaling being inefficient and error-prone. Autoscaling offers a better solution for resource allocation. KEDA enables Kubernetes autoscaling based on various metrics and events, while Amazon Managed Service for Prometheus provides secure metric monitoring for EKS clusters. This solution combines KEDA with Amazon Managed Service for Prometheus, demonstrating autoscaling based on Requests Per Second (RPS) metrics. The approach delivers automated scaling tailored to workload demands, which users can apply to their own EKS workloads. Amazon Managed Grafana is used for monitoring and visualizing scaling patterns, allowing users to gain insights into autoscaling behaviors and correlate them with business events.","sidebar":"guides"},"guides/containers/oss/eks/resource-optimization":{"id":"guides/containers/oss/eks/resource-optimization","title":"Resource Optimization best practices for Kubernetes workloads","description":"Kubernetes adoption continues to accelerate, as many move to microservice based architectures. A lot of the initial focus was on designing and building new cloud native architectures to support the applications. As environments grow, we are starting to see the focus to optimize resource allocation from customers. Resource optimization is the second most important  question operations team ask for after security."},"guides/cost/cost-visualization/amazon-cloudwatch":{"id":"guides/cost/cost-visualization/amazon-cloudwatch","title":"Amazon CloudWatch","description":"Amazon CloudWatch cost and usage visuals will allow you to gain insights into cost of individual AWS Accounts, AWS Regions, and all CloudWatch operations like GetMetricData, PutLogEvents, GetMetricStream, ListMetrics, MetricStorage, HourlyStorageMetering, and ListMetrics to name a few!","sidebar":"guides"},"guides/cost/cost-visualization/amazon-grafana":{"id":"guides/cost/cost-visualization/amazon-grafana","title":"Amazon Managed Grafana","description":"Amazon Managed Grafana cost and usage visuals will allow you to gain insights into cost of individual AWS Accounts, AWS Regions, specific Grafana Workspace instances and licensing cost of Admin, Editor, and Viewer users!","sidebar":"guides"},"guides/cost/cost-visualization/amazon-prometheus":{"id":"guides/cost/cost-visualization/amazon-prometheus","title":"Amazon Managed Service for Prometheus","description":"Amazon Managed Service for Prometheus cost and usage visuals will allow you to gain insights into cost of individual AWS Accounts, AWS Regions, specific Prometheus Workspace instances along with Operations like RemoteWrite, Query, and HourlyStorageMetering!","sidebar":"guides"},"guides/cost/cost-visualization/AmazonManagedServiceforPrometheus":{"id":"guides/cost/cost-visualization/AmazonManagedServiceforPrometheus","title":"Real-time cost monitoring","description":"Amazon Managed Service for Prometheus is a server-less, Prometheus-compatible monitoring service for container metrics that makes it easier to securely monitor container environments at scale. Amazon Managed Service for Prometheus pricing model is based on Metric samples ingested, Query samples processed, and Metrics stored. You can find the latest pricing details here.","sidebar":"guides"},"guides/cost/cost-visualization/aws-xray":{"id":"guides/cost/cost-visualization/aws-xray","title":"AWS X-Ray","description":"AWS X-Ray cost and usage visuals will allow you to gain insights into cost of individual AWS Accounts, AWS Regions, and TracesStored!","sidebar":"guides"},"guides/cost/cost-visualization/cost":{"id":"guides/cost/cost-visualization/cost","title":"AWS Observability services and Cost","description":"As you invest in your Observability stack, it\u2019s important that you monitor the cost of your observability products on a regular basis. This allows you to ensure that you are only incurring the costs you need and that you are not overspending on resources you don\'t need.","sidebar":"guides"},"guides/cost/cost-visualization/reducing-cw-cost":{"id":"guides/cost/cost-visualization/reducing-cw-cost","title":"Reducing CloudWatch cost","description":"GetMetricData"},"guides/cost/kubecost":{"id":"guides/cost/kubecost","title":"Using Kubecost","description":"Kubecost provides customers with visibility into spend and resource efficiency in Kubernetes environments. At a high level, Amazon EKS cost monitoring is deployed with Kubecost, which includes Prometheus, an open-source monitoring system and time series database. Kubecost reads metrics from Prometheus then performs cost allocation calculations and writes the metrics back to Prometheus. Finally, the Kubecost front end reads metrics from Prometheus and shows them on the Kubecost user interface (UI). The architecture is illustrated by the following diagram:","sidebar":"guides"},"guides/dashboards":{"id":"guides/dashboards","title":"Dashboarding","description":"Best practices"},"guides/databases/rds-and-aurora":{"id":"guides/databases/rds-and-aurora","title":"Monitor Amazon RDS and Aurora databases","description":"Monitoring is a critical part of maintaining the reliability, availability, and performance of Amazon RDS and Aurora database clusters. AWS provides several tools for monitoring health of your Amazon RDS and Aurora databases resources, detect issues before they become critical and optimize performance for consistent user experience.  This guide provides the observability best practices to ensure your databases are running smoothly.","sidebar":"guides"},"guides/ec2-monitoring":{"id":"guides/ec2-monitoring","title":"EC2 Monitoring and Observability","description":"Introduction","sidebar":"guides"},"guides/full-stack":{"id":"guides/full-stack","title":"Full-stack","description":""},"guides/hybrid-and-multicloud":{"id":"guides/hybrid-and-multicloud","title":"Best practices for hybrid and multicloud","description":"Intro","sidebar":"guides"},"guides/index":{"id":"guides/index","title":"Best practices overview","description":"Observability is a broad topic with a mature landscape of tools. Not every tool is right for every solution though! To help you navigate through your observability requirements, configuration, and final deployment, we have summarized five key best practices that will inform your decision making process on your Observability strategy.","sidebar":"guides"},"guides/observability-maturity-model":{"id":"guides/observability-maturity-model","title":"AWS Observability Maturity Model","description":"Introduction","sidebar":"guides"},"guides/operational/adot-at-scale/adot-java-spring/adot-java-spring":{"id":"guides/operational/adot-at-scale/adot-java-spring/adot-java-spring","title":"Instrumenting Java Spring Integration Applications","description":"This article describes an approach for manually instrumenting Spring-Integration applications utilizing Open Telemetry and X-ray.","sidebar":"guides"},"guides/operational/adot-at-scale/operating-adot-collector":{"id":"guides/operational/adot-at-scale/operating-adot-collector","title":"Operating the AWS Distro for OpenTelemetry (ADOT) Collector","description":"The ADOT collector is a downstream distribution of the open-source OpenTelemetry Collector by CNCF.","sidebar":"guides"},"guides/operational/alerting/amp-alertmgr":{"id":"guides/operational/alerting/amp-alertmgr","title":"Amazon Managed Service for Prometheus Alert Manager","description":"Introduction","sidebar":"guides"},"guides/operational/alerts/amg-alerts":{"id":"guides/operational/alerts/amg-alerts","title":"amg-alerts","description":""},"guides/operational/alerts/cw-alarms":{"id":"guides/operational/alerts/cw-alarms","title":"cw-alarms","description":""},"guides/operational/alerts/prometheus-alerts":{"id":"guides/operational/alerts/prometheus-alerts","title":"prometheus-alerts","description":""},"guides/operational/business/key-performance-indicators":{"id":"guides/operational/business/key-performance-indicators","title":"key-performance-indicators","description":"1.0 Understanding KPIs (\\"Golden Signals\\")","sidebar":"guides"},"guides/operational/business/monitoring-for-business-outcomes":{"id":"guides/operational/business/monitoring-for-business-outcomes","title":"Why should you do observability?","description":"See Developing an Observability Strategy on YouTube","sidebar":"guides"},"guides/operational/business/sla-percentile":{"id":"guides/operational/business/sla-percentile","title":"Percentiles are important","description":"Percentiles are important in monitoring and reporting because they provide a more detailed and accurate view of data distribution compared to just relying on averages. An average can sometimes hide important information, such as outliers or variations in the data, that can significantly impact performance and user experience. Percentiles, on the other hand, can reveal these hidden details and give a better understanding of how the data is distributed.","sidebar":"guides"},"guides/operational/gitops-with-amg/gitops-with-amg":{"id":"guides/operational/gitops-with-amg/gitops-with-amg","title":"Using GitOps and Grafana Operator with Amazon Managed Grafana","description":"How to use this guide","sidebar":"guides"},"guides/operational/observability-driven-dev":{"id":"guides/operational/observability-driven-dev","title":"observability-driven-dev","description":""},"guides/partners/databricks":{"id":"guides/partners/databricks","title":"Databricks Monitoring and Observability Best Practices in AWS","description":"Databricks is a platform for managing data analytics and AI/ML workloads. This guide aim at supporting customers running Databricks on AWS with monitoring these workloads using AWS Native services for observability or OpenSource Managed Services.","sidebar":"guides"},"guides/rust-custom-metrics/README":{"id":"guides/rust-custom-metrics/README","title":"Creating Custom Metrics with the AWS Rust SDK","description":"Introduction","sidebar":"guides"},"guides/serverless/aws-native/lambda-based-observability":{"id":"guides/serverless/aws-native/lambda-based-observability","title":"AWS Lambda based Serverless Observability","description":"In the world of distributed systems and serverless computing, achieving observability is the key to ensuring application reliability and performance. It involves more than traditional monitoring. By leveraging AWS observability tools like Amazon CloudWatch and AWS X-Ray, you can gain insights into your serverless applications, troubleshoot issues, and optimize application performance. In this guide, we will learn essential concepts, tools and best practices to implement Observability of your Lambda based serverless application.","sidebar":"guides"},"guides/serverless/oss/lambda-based-observability-adot":{"id":"guides/serverless/oss/lambda-based-observability-adot","title":"AWS Lambda based Serverless Observability with OpenTelemetry","description":"This guide covers the best practices on configuring observability for Lambda based serverless applications using managed open-source tools and technologies together with the native AWS monitoring services such as AWS X-Ray, and Amazon CloudWatch. We will cover tools such as AWS Distro for OpenTelemetry (ADOT), AWS X-Ray, and Amazon Managed Service for Prometheus (AMP) and how you can use these tools to gain actionable insights into your serverless applications, troubleshoot issues, and optimize application performance.","sidebar":"guides"},"guides/signal-collection/emf":{"id":"guides/signal-collection/emf","title":"CloudWatch Embedded Metric Format","description":"Introduction","sidebar":"guides"},"guides/signal-correlation/how-does-it-work":{"id":"guides/signal-correlation/how-does-it-work","title":"how-does-it-work","description":""},"guides/strategy":{"id":"guides/strategy","title":"Creating an observability strategy","description":""},"home":{"id":"home","title":"What is observability","description":"What it is"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"patterns/adoteksfargate":{"id":"patterns/adoteksfargate","title":"CloudWatch Container Insights","description":"Introduction","sidebar":"patterns"},"patterns/ampagentless":{"id":"patterns/ampagentless","title":"Pushing Metrics from EKS to Prometheus","description":"When running containerized workloads on Amazon Elastic Kubernetes Service (EKS), you can leverage AWS Managed Prometheus (AMP) to collect and analyze metrics from your applications and infrastructure. AMP simplifies the deployment and management of Prometheus-compatible monitoring by providing a fully managed Prometheus-compatible monitoring solution.","sidebar":"patterns"},"patterns/apmappsignals":{"id":"patterns/apmappsignals","title":"APM with Application Signals","description":"In the ever-evolving world of modern application development, ensuring optimal performance and meeting service level objectives (SLOs) is crucial for providing a seamless user experience and maintaining business continuity. Amazon CloudWatch Application Signals, an OpenTelemetry (OTel) compatible application performance monitoring (APM) feature, revolutionizes the way organizations monitor and troubleshoot their applications running on AWS.","sidebar":"patterns"},"patterns/ecsampamg":{"id":"patterns/ecsampamg","title":"Monitoring ECS Workloads","description":"Introduction","sidebar":"patterns"},"patterns/eksampamg":{"id":"patterns/eksampamg","title":"EKS Monitoring with AWS Open source service","description":"\x3c!-- Workloads with Node Exporter, Amazon Managed Prometheus, and Grafana Visualization","sidebar":"patterns"},"patterns/lambdalogging":{"id":"patterns/lambdalogging","title":"Lambda Logging","description":"In the world of serverless computing, observability is a critical aspect of ensuring the reliability, performance, and efficiency of your applications. AWS Lambda, a cornerstone of serverless architectures, provides a powerful and scalable platform for running event-driven code without the need to manage underlying infrastructure. However, as with any application, logging is essential for monitoring, troubleshooting, and gaining insights into the behavior and health of your Lambda functions.","sidebar":"patterns"},"patterns/multiaccount":{"id":"patterns/multiaccount","title":"Cross account Monitoring with AWS Native services","description":"With the increasing complexity of modern cloud environments, managing and monitoring multiple AWS accounts has become a critical aspect of efficient cloud operations. AWS multi-account monitoring provides a centralized approach to monitoring and managing resources across multiple AWS accounts, enabling organizations to gain better visibility, enhance security, and streamline operations.","sidebar":"patterns"},"patterns/multiaccountoss":{"id":"patterns/multiaccountoss","title":"Cross account monitoring with AWS Open source service","description":"Introduction","sidebar":"patterns"},"patterns/o11ypipeline":{"id":"patterns/o11ypipeline","title":"ADOT Observability Pipeline","description":"The observability pipeline consists of several components that work together to collect, manage, and analyze observability data from various sources.","sidebar":"patterns"},"patterns/opensearch":{"id":"patterns/opensearch","title":"Opensearch Logging on AWS","description":"Introduction","sidebar":"patterns"},"patterns/otel":{"id":"patterns/otel","title":"Observability with OpenTelemetry","description":"OpenTelemetry is an open-source, vendor-neutral observability framework that provides a standardized way to collect and export telemetry data, including logs, metrics, and traces. By leveraging OpenTelemetry, organizations can implement a comprehensive observability pipeline while ensuring vendor independence and future-proofing their observability strategy.","sidebar":"patterns"},"patterns/sparkbigdata":{"id":"patterns/sparkbigdata","title":"Big Data Observability on AWS","description":"This diagram illustrates a best practice pattern for implementing observability in a Spark big data workflow on AWS. The pattern leverages various AWS services to collect, process, and analyze logs and metrics generated by Spark jobs.","sidebar":"patterns"},"patterns/Tracing/xrayec2":{"id":"patterns/Tracing/xrayec2","title":"EC2 Tracing with AWS X-Ray","description":"In the world of cloud computing, Amazon Elastic Compute Cloud (EC2) provides a highly scalable and flexible platform for running a wide range of applications. However, as applications become more distributed and complex, observability becomes crucial for ensuring the reliability, performance, and efficiency of these applications.","sidebar":"patterns"},"patterns/Tracing/xrayecs":{"id":"patterns/Tracing/xrayecs","title":"ECS Tracing with AWS X-Ray","description":"In the world of modern application development, containerization has become the de facto standard for deploying and managing applications. Amazon Elastic Container Service (ECS) provides a highly scalable and reliable platform for deploying and managing containerized applications. However, as applications become more distributed and complex, observability becomes crucial for ensuring the reliability, performance, and efficiency of these applications.","sidebar":"patterns"},"patterns/Tracing/xrayeks":{"id":"patterns/Tracing/xrayeks","title":"EKS Tracing with AWS X-Ray","description":"In the world of modern application development, containerization has become the de facto standard for deploying and managing applications. Amazon Elastic Kubernetes Service (EKS) provides a robust and scalable platform for deploying and managing containerized applications using Kubernetes. However, as applications become more distributed and complex, observability becomes crucial for ensuring the reliability, performance, and efficiency of these applications.","sidebar":"patterns"},"patterns/Tracing/xraylambda":{"id":"patterns/Tracing/xraylambda","title":"Lambda Tracing with AWS X-Ray","description":"In the world of serverless computing, observability is crucial for ensuring the reliability, performance, and efficiency of your applications. AWS Lambda, the cornerstone of serverless architectures, provides a powerful and scalable platform for running event-driven code without the need to manage underlying infrastructure. However, as applications become more distributed and complex, traditional logging and monitoring techniques often fall short in providing a comprehensive view of the end-to-end request flow and performance.","sidebar":"patterns"},"patterns/vpcflowlogs":{"id":"patterns/vpcflowlogs","title":"VPC Flow Logs for Network Observability","description":"In modern cloud environments, network observability plays a crucial role in ensuring the security, performance, and reliability of your applications and infrastructure. Amazon Virtual Private Cloud (VPC) Flow Logs, a feature provided by Amazon Web Services (AWS), offers a powerful tool for gaining visibility into network traffic within your VPCs, enabling effective troubleshooting and security analysis.","sidebar":"patterns"},"recipes/aes":{"id":"recipes/aes","title":"Amazon OpenSearch Service","description":"Amazon OpenSearch Service (AOS), successor to Amazon Elasticsearch Service,","sidebar":"recipes"},"recipes/alerting":{"id":"recipes/alerting","title":"Alerting","description":"This section has a selection of recipes for various alerting systems and scenarios.","sidebar":"recipes"},"recipes/amg":{"id":"recipes/amg","title":"Amazon Managed Grafana","description":"Amazon Managed Grafana is a fully managed service based on open","sidebar":"recipes"},"recipes/amp":{"id":"recipes/amp","title":"Amazon Managed Service for Prometheus","description":"Amazon Managed Service for Prometheus (AMP) is a Prometheus-compatible","sidebar":"recipes"},"recipes/anomaly-detection":{"id":"recipes/anomaly-detection","title":"Anomaly Detection","description":"This section contains recipes for anomaly detection.","sidebar":"recipes"},"recipes/apprunner":{"id":"recipes/apprunner","title":"AWS App Runner","description":"AWS App Runner is a fully managed service that makes it easy for developers to quickly deploy containerized web applications and APIs, at scale and with no prior infrastructure experience required. Start with your source code or a container image. App Runner builds and deploys the web application automatically, load balances traffic with encryption, scales to meet your traffic needs, and makes it easy for your services to communicate with other AWS services and applications that run in a private Amazon VPC. With App Runner, rather than thinking about servers or scaling, you have more time to focus on your applications.","sidebar":"recipes"},"recipes/cw":{"id":"recipes/cw","title":"Amazon CloudWatch","description":"Amazon CloudWatch (CW) is a monitoring and observability service built","sidebar":"recipes"},"recipes/dimensions":{"id":"recipes/dimensions","title":"Dimensions","description":"In the context of this site we consider the o11y space along six dimensions.","sidebar":"recipes"},"recipes/dynamodb":{"id":"recipes/dynamodb","title":"Amazon DynamoDB","description":"Amazon DynamoDB is a key-value and document database that delivers","sidebar":"recipes"},"recipes/ecs":{"id":"recipes/ecs","title":"Amazon Elastic Container Service","description":"Amazon Elastic Container Service (ECS) is a fully managed container","sidebar":"recipes"},"recipes/eks":{"id":"recipes/eks","title":"Amazon Elastic Kubernetes Service","description":"Amazon Elastic Kubernetes Service (EKS) gives you the flexibility to","sidebar":"recipes"},"recipes/index":{"id":"recipes/index","title":"Recipes","description":"In here you will find curated guidance, how-to\'s, and links to other resources that help with the application of observability (o11y) to various use cases. This includes managed services such as Amazon Managed Service for Prometheus","sidebar":"recipes"},"recipes/infra":{"id":"recipes/infra","title":"Infrastructure & Databases","description":"Networking","sidebar":"recipes"},"recipes/java":{"id":"recipes/java","title":"Java","description":"- StatsD and Java Support in AWS Distro for OpenTelemetry","sidebar":"recipes"},"recipes/lambda":{"id":"recipes/lambda","title":"AWS Lambda","description":"AWS Lambda is a serverless compute service that lets you run","sidebar":"recipes"},"recipes/msk":{"id":"recipes/msk","title":"Amazon Managed Streaming for Apache Kafka","description":"Amazon Managed Streaming for Apache Kafka (MSK) is a fully managed service that makes it","sidebar":"recipes"},"recipes/nodejs":{"id":"recipes/nodejs","title":"Node.js","description":"- NodeJS library to generate embedded CloudWatch metrics","sidebar":"recipes"},"recipes/rds":{"id":"recipes/rds","title":"Amazon Relational Database Service","description":"Amazon Relational Database Service (RDS) makes it easy to set up,","sidebar":"recipes"},"recipes/recipes/amg-athena-plugin":{"id":"recipes/recipes/amg-athena-plugin","title":"Using Athena in Amazon Managed Grafana","description":"In this recipe we show you how to use Amazon Athena\u2014a serverless,"},"recipes/recipes/amg-automation-tf":{"id":"recipes/recipes/amg-automation-tf","title":"Using Terraform for Amazon Managed Grafana automation","description":"In this recipe we show you how use Terraform to automate Amazon Managed Grafana,"},"recipes/recipes/amg-google-auth-saml":{"id":"recipes/recipes/amg-google-auth-saml","title":"Configure Google Workspaces authentication with Amazon Managed Grafana using SAML","description":"In this guide, we will walk through how you can setup Google Workspaces as an"},"recipes/recipes/amg-redshift-plugin":{"id":"recipes/recipes/amg-redshift-plugin","title":"Using Redshift in Amazon Managed Grafana","description":"In this recipe we show you how to use Amazon Redshift\u2014a petabyte-scale data"},"recipes/recipes/amp-alertmanager-terraform":{"id":"recipes/recipes/amp-alertmanager-terraform","title":"Terraform as Infrastructure as a Code to deploy Amazon Managed Service for Prometheus and configure Alert manager","description":"In this recipe, we will demonstrate how you can use Terraform to provision Amazon Managed Service for Prometheus and configure rules management and alert manager to send notification to a SNS topic if a certain condition is met."},"recipes/recipes/amp-mixin-dashboards":{"id":"recipes/recipes/amp-mixin-dashboards","title":"Adding [**kubernetes-mixin**](https://github.com/kubernetes-monitoring/kubernetes-mixin) dashboards to Managed Grafana","description":"Even as a managed service, EKS still exposes many of the metrics from the Kubernetes control plane. The Prometheus community has put together a series of dashboards to review and investigate these metrics. This document will show you how to install them in an environment hosted by Amazon Managed Service for Prometheus."},"recipes/recipes/as-ec2-using-amp-and-alertmanager":{"id":"recipes/recipes/as-ec2-using-amp-and-alertmanager","title":"Auto-scaling Amazon EC2 using Amazon Managed Service for Prometheus and alert manager","description":"Customers want to migrate their existing Prometheus workloads to the cloud and utilize all that the cloud offers. AWS has services like Amazon EC2 Auto Scaling, which lets you scale out Amazon Elastic Compute Cloud (Amazon EC2) instances based on metrics like CPU or memory utilization. Applications that use Prometheus metrics can easily integrate into EC2 Auto Scaling without needing to replace their monitoring stack. In this post, I will walk you through configuring Amazon EC2 Auto Scaling to work with Amazon Managed Service for Prometheus Alert Manager. This approach lets you move a Prometheus-based workload to the cloud while taking advantage of services like autoscaling."},"recipes/recipes/ec2-eks-metrics-go-adot-ampamg":{"id":"recipes/recipes/ec2-eks-metrics-go-adot-ampamg","title":"Using AWS Distro for OpenTelemetry in EKS on EC2 with Amazon Managed Service for Prometheus","description":"In this recipe we show you how to instrument a sample Go application and"},"recipes/recipes/fargate-eks-metrics-go-adot-ampamg":{"id":"recipes/recipes/fargate-eks-metrics-go-adot-ampamg","title":"Using AWS Distro for OpenTelemetry in EKS on Fargate with Amazon Managed Service for Prometheus","description":"In this recipe we show you how to instrument a sample Go application and"},"recipes/recipes/fargate-eks-xray-go-adot-amg":{"id":"recipes/recipes/fargate-eks-xray-go-adot-amg","title":"Using AWS Distro for OpenTelemetry in EKS on Fargate with AWS X-Ray","description":"In this recipe we show you how to instrument a sample Go application"},"recipes/recipes/lambda-cw-metrics-go-amp":{"id":"recipes/recipes/lambda-cw-metrics-go-amp","title":"Exporting CloudWatch Metric Streams via Firehose and AWS Lambda to Amazon Managed Service for Prometheus","description":"In this recipe we show you how to instrument a CloudWatch Metric Stream and use Kinesis Data Firehose and AWS Lambda to ingest metrics into Amazon Managed Service for Prometheus (AMP)."},"recipes/recipes/metrics-explorer-filter-by-tags":{"id":"recipes/recipes/metrics-explorer-filter-by-tags","title":"Using Amazon CloudWatch Metrics explorer to aggregate and visualize metrics filtered by resource tags","description":"In this recipe we show you how to use Metrics explorer to filter, aggregate, and visualize metrics by resource tags and resource properties - Use metrics explorer to monitor resources by their tags and properties."},"recipes/recipes/monitoring-hybridenv-amg":{"id":"recipes/recipes/monitoring-hybridenv-amg","title":"Monitoring hybrid environments using Amazon Managed Service for Grafana","description":"In this recipe we show you how to visualize metrics from an Azure Cloud environment to Amazon Managed Service for Grafana (AMG) and create alert notifications in AMG to be sent to Amazon Simple Notification Service and Slack."},"recipes/recipes/servicemesh-monitoring-ampamg":{"id":"recipes/recipes/servicemesh-monitoring-ampamg","title":"Using Amazon Managed Service for Prometheus to monitor App Mesh environment configured on EKS","description":"In this recipe we show you how to ingest App Mesh Envoy"},"recipes/recipes/Workspaces-Monitoring-AMP-AMG/README":{"id":"recipes/recipes/Workspaces-Monitoring-AMP-AMG/README","title":"README","description":"Organizations have started adopting Amazon Workspaces as virtual cloud based desktop as a solution (DAAS) to replace their existing traditional desktop solution to shift the cost and effort of maintaining laptops and desktops to a cloud pay-as-you-go model. Organizations using Amazon Workspaces would need support of these managed services to monitor their workspaces environment for Day 2 operations. A cloud based managed open source monitoring solution such as Amazon Managed Service for Prometheus and Amazon Managed Grafana helps IT teams to quickly setup and operate a monitoring solution to save cost. Monitoring CPU, memory, network, or disk activity from Amazon Workspace eliminates guesswork while troubleshooting Amazon Workspaces environment."},"recipes/telemetry":{"id":"recipes/telemetry","title":"Telemetry","description":"Telemetry is all about how the signals are collected from various sources,","sidebar":"recipes"},"recipes/troubleshooting":{"id":"recipes/troubleshooting","title":"Troubleshooting","description":"We include troubleshooting recipes for various situations and dimensions in this section.","sidebar":"recipes"},"recipes/workshops":{"id":"recipes/workshops","title":"Workshops","description":"This section contains workshops to which you can return for samples","sidebar":"recipes"},"signals/alarms":{"id":"signals/alarms","title":"Alarms","description":"An alarm refers to the state of a probe, monitor, or change in a value over or under a given threshold. A simple example would be an alarm that sends an email when a disk is full or a web site is down. More sophisticated alarms are entirely programmatic and used to drive complex interactions such as auto-scaling or creating of entire server clusters.","sidebar":"sigals"},"signals/anomalies":{"id":"signals/anomalies","title":"Anomalies","description":"WIP"},"signals/events":{"id":"signals/events","title":"Events","description":"What do we mean by events?","sidebar":"sigals"},"signals/logs":{"id":"signals/logs","title":"Logs","description":"Logs are a series of messages that are sent by an application, or an appliance, that are represented by one or more lines of details about an event, or sometimes about the health of that application. Typically, logs are delivered to a file, though sometimes they are sent to a collector that performs analysis and aggregation. There are many full-featured log aggregators, frameworks, and products that aim to make the task of generating, ingesting, and managing log data at any volume \u2013 from megabytes per day to terabytes per hour.","sidebar":"sigals"},"signals/metrics":{"id":"signals/metrics","title":"Metrics","description":"Metrics are a series of numerical values that are kept in order with the time that they are created. They are used to track everything from the number of servers in your environment, their disk usage, number of requests they handle per second, or the latency in completing these requests.","sidebar":"sigals"},"signals/traces":{"id":"signals/traces","title":"Traces","description":"Traces represent an entire journey of the requests as they traverse through different components of an application.","sidebar":"sigals"},"tools/adot-traces":{"id":"tools/adot-traces","title":"Tracing with ADOT","description":"todo"},"tools/alarms":{"id":"tools/alarms","title":"Alarms","description":"Amazon CloudWatch alarms allows you to define thresholds around CloudWatch Metrics and Logs and receive notifications based on the rules configured in the CloudWatch.","sidebar":"tools"},"tools/alerting_and_incident_management":{"id":"tools/alerting_and_incident_management","title":"Alerting and incident management","description":""},"tools/amp":{"id":"tools/amp","title":"Amazon Managed Service for Prometheus","description":"Prometheus is a popular open source monitoring tool that provides wide ranging metrics capabilities and insights about resources such as compute nodes and application related performance data."},"tools/application-signals/kotlin-signals":{"id":"tools/application-signals/kotlin-signals","title":"Application Signals for Kotlin Services","description":"Introduction","sidebar":"tools"},"tools/cloudwatch_agent":{"id":"tools/cloudwatch_agent","title":"CloudWatch Agent","description":"Deploying the CloudWatch agent","sidebar":"tools"},"tools/cloudwatch-dashboard":{"id":"tools/cloudwatch-dashboard","title":"CloudWatch Dashboard","description":"Introduction","sidebar":"guides"},"tools/collector-arch":{"id":"tools/collector-arch","title":"collector-arch","description":""},"tools/dashboards":{"id":"tools/dashboards","title":"Dashboards","description":"Dashboards are an important part of your Observability soluution. They enable you to produce a curated visualization of your data. They enable you see a history of your data, and see it alongside other related data. They also allow you to provide context. They help you understand the bigger picture.","sidebar":"tools"},"tools/emf":{"id":"tools/emf","title":"Embedded Metric Format","description":"The CloudWatch embedded metric format(EMF) is a JSON specification used to instruct CloudWatch Logs to automatically extract metric values embedded in structured log events. You can use CloudWatch to graph and create alarms on the extracted metric values. With EMF, you can push the metric related data in terms of CloudWatch logs which gets discovered as metric in CloudWatch."},"tools/internet_monitor":{"id":"tools/internet_monitor","title":"Internet Monitor","description":"As of this writing, Internet Monitor is available in preview in the CloudWatch console. The scope of features for general availability may change from what you experience today.","sidebar":"tools"},"tools/logs/dataprotection/data-protection-policies":{"id":"tools/logs/dataprotection/data-protection-policies","title":"CloudWatch Logs Data Protection Policies for SLG/EDU","description":"Although logging data is beneficial in general, however, masking them is useful for organizations who have strict regulations such as the Health Insurance Portability and Accountability Act (HIPAA), General Data Privacy Regulation (GDPR), Payment Card Industry Data Security Standard (PCI-DSS), and Federal Risk and Authorization Management Program (FedRAMP).","sidebar":"tools"},"tools/logs/index":{"id":"tools/logs/index","title":"Logging","description":"The selection of logging tools is tied to your requirements for data transmission, filtering, retention, capture, and integration with the applications that generate your data. When using Amazon Web Services for observability (regardless whether you host on-premises or in another cloud environment), you can leverage the CloudWatch agent or another tool such as Fluentd to emit logging data for analysis.","sidebar":"tools"},"tools/logs/logs-insights-examples":{"id":"tools/logs/logs-insights-examples","title":"CloudWatch Logs Insights Example Queries","description":"CloudWatch Logs Insights provides a powerful platform for analyzing and querying CloudWatch log data. It allows you interactively search through your log data using a SQL like query language with a few simple but powerful commands.","sidebar":"tools"},"tools/metrics":{"id":"tools/metrics","title":"Metrics","description":"Metrics are data about the performance of your system. Having all the metrics related to system or the resources available in a centralised place grants you the ability to compare metrics, analyse performance, and make better strategic decisions like scaling-up or scaling-in resources. Metrics are also important for the knowing the health of the resources and take proactive measures.","sidebar":"tools"},"tools/observability_accelerator":{"id":"tools/observability_accelerator","title":"AWS Observability Accelerator","description":"The AWS Observability Accelerator is a set of opinionated modules to help you set up observability for your AWS environments with AWS Native services and AWS-managed observability services such as Amazon Managed Service for Prometheus,Amazon Managed Grafana, AWS Distro for OpenTelemetry (ADOT) and Amazon CloudWatch.","sidebar":"tools"},"tools/rum":{"id":"tools/rum","title":"Real User Monitoring","description":"With CloudWatch RUM, you can perform real user monitoring to collect and view client-side data about your web application performance from actual user sessions in near real time. The data that you can visualize and analyze includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together, and also see breakdowns by the browsers and devices that your customers use.","sidebar":"tools"},"tools/slos":{"id":"tools/slos","title":"Service Level Objectives (SLOs)","description":"Are highly available and resilient applications an active business driver for your company?","sidebar":"tools"},"tools/synthetics":{"id":"tools/synthetics","title":"Synthetic testing","description":"Amazon CloudWatch Synthetics allows you to monitor applications from the perspective of your customer, even in the absence of actual users. By continuously testing your APIs and website experiences, you can gain visibility into intermittent issues that occur even when there is no user traffic.","sidebar":"tools"},"tools/xray":{"id":"tools/xray","title":"AWS X-Ray","description":"Sampling rules","sidebar":"tools"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}}')}}]);