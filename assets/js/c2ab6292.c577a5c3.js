"use strict";(self.webpackChunkobservability_best_practices=self.webpackChunkobservability_best_practices||[]).push([[2680],{50114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=n(74848),i=n(28453);const r={},o="Telemetry",a={id:"recipes/telemetry",title:"Telemetry",description:"Telemetry is all about how the signals are collected from various sources,",source:"@site/docs/recipes/telemetry.md",sourceDirName:"recipes",slug:"/recipes/telemetry",permalink:"/observability-best-practices/docs/recipes/telemetry",draft:!1,unlisted:!1,editUrl:"https://github.com/aws-observability/observability-best-practices/docs/recipes/telemetry.md",tags:[],version:"current",frontMatter:{},sidebar:"recipes",previous:{title:"Dimensions",permalink:"/observability-best-practices/docs/recipes/dimensions"},next:{title:"AWS App Runner",permalink:"/observability-best-practices/docs/recipes/apprunner"}},c={},l=[{value:"Sources",id:"sources",level:2},{value:"Agents",id:"agents",level:2},{value:"Destinations",id:"destinations",level:2}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"telemetry",children:"Telemetry"}),"\n",(0,s.jsx)(t.p,{children:"Telemetry is all about how the signals are collected from various sources,\nincluding your own app and infrastructure and routed to destinations where\nthey are consumed:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"telemetry concept",src:n(40125).A+"",width:"2000",height:"1111"})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"../signals/logs",children:"Data types"})," section for a detailed breakdown of the best practices for each type of telemetry."]})}),"\n",(0,s.jsx)(t.p,{children:"Let's further dive into the concepts introduced in above figure."}),"\n",(0,s.jsx)(t.h2,{id:"sources",children:"Sources"}),"\n",(0,s.jsx)(t.p,{children:"We consider sources as something where signals come from. There are two types of sources:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Things under your control, that is, the application source code, via instrumentation."}),"\n",(0,s.jsx)(t.li,{children:"Everything else you may use, such as managed services, not under your (direct) control.\nThese types of sources are typically provided by AWS, exposing signals via an API."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"agents",children:"Agents"}),"\n",(0,s.jsx)(t.p,{children:"In order to transport signals from the sources to the destinations, you need\nsome sort of intermediary we call agent. These agents receive or pull signals\nfrom the sources and, typically via configuration, determine where signals\nshoud go, optionally supporting filtering and aggregation."}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:'"Agents? Routing? Shipping? Ingesting?"\nThere are many terms out there people use to refer to the process of\ngetting the signals from sources to destinations including routing,\nshipping, aggregation, ingesting etc. and while they may mean slightly\ndifferent things, we will use them here interchangeably. Canonically,\nwe will refer to those intermediary transport components as agents.'})}),"\n",(0,s.jsx)(t.h2,{id:"destinations",children:"Destinations"}),"\n",(0,s.jsx)(t.p,{children:"Where signals end up, for consumption. No matter if you want to store signals\nfor later consumption, if you want to dashboard them, set an alert if a certain\ncondition is true, or correlate signals. All of those components that serve\nyou as the end-user are destinations."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},40125:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/telemetry-ff3da44984c202cfbd22c83e912b82ab.png"},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);